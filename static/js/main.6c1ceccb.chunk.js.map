{"version":3,"sources":["images/logo.svg","images/edit-icon.svg","images/avatar.jpg","components/Header.js","components/Footer.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","projectApi","options","this","_baseUrl","baseUrl","_headers","headers","fetch","authorization","then","res","ok","json","Promise","reject","status","name","about","method","body","JSON","stringify","newUrl","avatar","link","id","resolve","cardID","Card","props","card","data-url","data-alt","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setDescription","defaultAvatar","userAvatar","setAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userInfo","cardsArr","catch","err","console","log","alert","onEditAvatarClick","editAvatarIcon","onEditProfileClick","onAddPlaceLink","map","cardInfo","key","_id","PoupWithForm","isOpen","onClose","noValidate","title","children","ImagePopup","opened","App","isEditProfilePopupOpen","setProfilePopupOpened","isAddPlacePopupOpen","setPlacePopupOpened","isEditAvatarPopupOpen","setAvatarPopupOpened","img","selectedCard","setSelectedCard","closeAllPopups","e","target","classList","contains","PopupWithForm","placeholder","minLength","maxLength","pattern","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6c1ceccb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-icon.34c46850.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.1abefdf6.jpg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"логотип сервиса Mesto\" />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this._headers.authorization\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this._headers.authorization\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  changeUserInfo(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({name, about})\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  changeAvatar(newUrl) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({avatar: newUrl})\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({name, link})\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status);\r\n      })\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._headers.authorization\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return Promise.resolve()\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  putLike(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._headers.authorization\r\n      }\r\n    })\r\n      .then (res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n\r\n  deleteLike(cardID) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._headers.authorization\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json();\r\n        else\r\n          return Promise.reject(res.status)\r\n      })\r\n  }\r\n}\r\n\r\nconst projectApi = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n    authorization: 'ffe2a54c-a9b3-42ed-8feb-c2a6d6aa9dd2',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default projectApi;\r\n","import React from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n  const cardClickHandler = () => props.onCardClick(props.card);\r\n\r\n  return (\r\n    <figure className=\"card\">\r\n      <img className=\"card__image\" src={props.card.link} alt={props.card.name}/>\r\n      <div className=\"card__shadow-rect\" data-url={props.card.link} data-alt={props.card.name} onClick={cardClickHandler}></div>\r\n      <figcaption className=\"card__caption-content\">\r\n        <p className=\"card__caption\">{props.card.name}</p>\r\n        <div className=\"card__likes-block\">\r\n          <button className=\"default-button card__like-button\" type=\"button\"></button>\r\n          <span className=\"card__likes-counter\">{props.card.likes.length}</span>\r\n        </div>\r\n        <button className=\"default-button card__delete-button\" type=\"button\"></button>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\nimport projectApi from '../utils/api';\nimport editAvatarIcon from '../images/edit-icon.svg';\nimport defaultAvatar from '../images/avatar.jpg';\nimport Card from './Card';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('Жак-Ив Кусто');\n  const [userDescription, setDescription] = React.useState('Исследователь океана');\n  const [userAvatar, setAvatar] = React.useState(defaultAvatar);\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(()=> {\n    Promise.all([projectApi.getUserInfo(), projectApi.getInitialCards()])\n      .then(([userInfo, cardsArr]) => {\n        setUserName(userInfo.name);\n        setDescription(userInfo.about);\n        setAvatar(userInfo.avatar);\n        setCards(cardsArr)\n      })\n      .catch(err => {\n        console.log(`Ошибка ${err}`);\n        alert('Ошибка подключения к серверу.')\n      })\n    }, []\n  )\n\n  return (\n    <main>\n      <section className=\"profile\">\n        <div className=\"profile__content\">\n          <div className=\"profile__avatar-block\" onClick={props.onEditAvatarClick}>\n            <img className=\"profile__avatar\" src={userAvatar} alt=\"аватар пользователя\" />\n            <div className=\"profile__shadow-rect\"></div>\n            <img className=\"profile__edit-icon\" src={editAvatarIcon} alt=\"иконка редактирования аватара\" />\n          </div>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button className=\"default-button profile__edit-button\" type=\"button\" onClick={props.onEditProfileClick}></button>\n            <p className=\"profile__description\">{userDescription}</p>\n          </div>\n        </div>\n        <button className=\"default-button profile__add-button\" type=\"button\" onClick={props.onAddPlaceLink}></button>\n      </section>\n      <section className=\"gallery\">\n        {cards.map(cardInfo => <Card key={cardInfo._id} card={cardInfo} onCardClick={props.onCardClick}/>)}\n      </section>\n    </main>\n  )\n}\n\nexport default Main;\n","import React from 'react';\r\n\r\nfunction PoupWithForm(props) {\r\n  return (\r\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup'} id={`popup-${props.name}`} onClick={props.onClose}>\r\n      <form className=\"popup__container\" noValidate>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button className=\"default-button popup__close-button\" type=\"button\" onClick={props.onClose}></button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PoupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={props.card.opened ? 'popup popup_opened' : 'popup'} id=\"popup-image\" onClick={props.onClose}>\r\n      <figure className=\"popup__image-container\">\r\n        <img className=\"popup__image\" src={props.card.src} alt={props.card.alt} />\r\n        <figcaption className=\"popup__image-caption\">{props.card.alt}</figcaption>\r\n        <button className=\"default-button popup__close-button\" type=\"button\" onClick={props.onClose}></button>\r\n      </figure>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setProfilePopupOpened] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setPlacePopupOpened] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setAvatarPopupOpened] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({img: '', alt: '', opened: false});\r\n\r\n  const handleEditProfileClick = () => {\r\n    setProfilePopupOpened(true)\r\n  }\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setAvatarPopupOpened(true)\r\n  }\r\n\r\n  const handleAddPlaceLink = () => {\r\n    setPlacePopupOpened(true)\r\n  }\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard({src: card.link, alt: card.name, opened: true})\r\n  }\r\n\r\n  const closeAllPopups = (e) => {\r\n    if (e.target.classList.contains('popup') || e.target.classList.contains('popup__close-button')) {\r\n      setProfilePopupOpened(false);\r\n      setAvatarPopupOpened(false);\r\n      setPlacePopupOpened(false);\r\n      setSelectedCard({src: '', alt: '', opened: false})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Main onEditProfileClick={handleEditProfileClick} onEditAvatarClick={handleEditAvatarClick} onAddPlaceLink={handleAddPlaceLink} onCardClick={handleCardClick}/>\r\n      <Footer />\r\n      <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\r\n        children={\r\n          <>\r\n            <input className=\"popup__item popup__item_type_name\" id=\"input-name\" type=\"text\" name=\"profile-name\" placeholder=\"Имя\"\r\n              minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-Яа-яЁё\\s\\-]*\" required\r\n            />\r\n            <span className=\"popup__error\" id=\"input-name-error\"></span>\r\n            <input className=\"popup__item popup__item_type_description\" id='input-description' type=\"text\" name=\"profile-description\"\r\n              placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required\r\n            />\r\n            <span className=\"popup__error\" id=\"input-description-error\"></span>\r\n            <button className=\"default-button popup__save-button\" type=\"submit\">Сохранить</button>\r\n          </>\r\n        }\r\n      />\r\n      <PopupWithForm name=\"add-image\" title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\r\n       children={\r\n          <>\r\n            <input className=\"popup__item popup__item_type_name\" id=\"input-place-name\" type=\"text\" name=\"place-name\"\r\n              placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required\r\n            />\r\n            <span className=\"popup__error\" id=\"input-place-name-error\"></span>\r\n            <input className=\"popup__item popup__item_type_description\" id=\"input-url\" type=\"url\" name=\"place-link\"\r\n              placeholder=\"Ссылка на картинку\" required\r\n            />\r\n            <span className=\"popup__error\" id=\"input-url-error\"></span>\r\n            <button className=\"default-button popup__save-button\" type=\"submit\">Создать</button>`\r\n          </>\r\n        }\r\n      />\r\n      <PopupWithForm name=\"agreement\" title=\"Вы уверены?\" children={\r\n        <button className=\"default-button popup__save-button\" type=\"submit\">Да</button>}\r\n      />\r\n      <PopupWithForm name=\"avatar-change\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\r\n        children={\r\n          <>\r\n            <input className=\"popup__item popup__item_type_name\" id=\"input-url\" type=\"url\" name=\"user-avatar\" placeholder=\"Ссылка на аватар\" required />\r\n            <span className=\"popup__error\" id=\"input-url-error\"></span>\r\n            <button className=\"default-button popup__save-button\" type=\"submit\">Сохранить</button>\r\n          </>\r\n        }\r\n      />\r\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}